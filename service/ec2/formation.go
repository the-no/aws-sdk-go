// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ec2

import (
	"time"

	"github.com/the-no/aws-sdk-go/aws"
	"github.com/the-no/aws-sdk-go/aws/request"
)

// createAWSEC2Instance uses the Amazon EC2 API operation
// RunInstances to wait for a condition to be met before returning.
// If the condition is not met within the max attempt window, an error will
// be returned.
func (c *EC2) createAWSEC2Instance(input *RunInstancesInput) (r aws.Referencer, attr aws.Attrabuter, err error) {

	runinstancesrequest := input
	reservation, err := RunInstances(runinstancesrequest)
	if err == nil {
		describeinstancesrequest := &DescribeInstancesInput{}
		if err := awsutil.CopyValue(describeinstancesrequest, "InstanceIds", runinstancesrequest, "Instances[].InstanceId"); err != nil {
			return nil, nil, err
		}
		if err := WaitUntilInstanceRunning(describeinstancesrequest); err != nil {
			return nil, nil, err
		}

	} else {
		return nil, nil, err
	}
	runinstancesrequest := input
	reservation, err := RunInstances(runinstancesrequest)
	if err == nil {
		describeinstancesrequest := &DescribeInstancesInput{}
		if err := awsutil.CopyValue(describeinstancesrequest, "InstanceIds", runinstancesrequest, "Instances[].InstanceId"); err != nil {
			return nil, nil, err
		}
		if err := WaitUntilInstanceRunning(describeinstancesrequest); err != nil {
			return nil, nil, err
		}

	} else {
		return nil, nil, err
	}

	return nil, nil, nil
}
